//
//Copyright 2021 The tKeel Authors.
//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//http://www.apache.org/licenses/LICENSE-2.0
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.1
// source: api/profile/v1/plgprofile.proto

package v1

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetTenantProfileDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TenantId string `protobuf:"bytes,1,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
}

func (x *GetTenantProfileDataRequest) Reset() {
	*x = GetTenantProfileDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_profile_v1_plgprofile_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTenantProfileDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTenantProfileDataRequest) ProtoMessage() {}

func (x *GetTenantProfileDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_profile_v1_plgprofile_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTenantProfileDataRequest.ProtoReflect.Descriptor instead.
func (*GetTenantProfileDataRequest) Descriptor() ([]byte, []int) {
	return file_api_profile_v1_plgprofile_proto_rawDescGZIP(), []int{0}
}

func (x *GetTenantProfileDataRequest) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

type GetTenantProfileDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Profiles map[string]int32 `protobuf:"bytes,1,rep,name=profiles,proto3" json:"profiles,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *GetTenantProfileDataResponse) Reset() {
	*x = GetTenantProfileDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_profile_v1_plgprofile_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTenantProfileDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTenantProfileDataResponse) ProtoMessage() {}

func (x *GetTenantProfileDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_profile_v1_plgprofile_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTenantProfileDataResponse.ProtoReflect.Descriptor instead.
func (*GetTenantProfileDataResponse) Descriptor() ([]byte, []int) {
	return file_api_profile_v1_plgprofile_proto_rawDescGZIP(), []int{1}
}

func (x *GetTenantProfileDataResponse) GetProfiles() map[string]int32 {
	if x != nil {
		return x.Profiles
	}
	return nil
}

type TenantProfiles struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Profiles map[string]int32 `protobuf:"bytes,1,rep,name=profiles,proto3" json:"profiles,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *TenantProfiles) Reset() {
	*x = TenantProfiles{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_profile_v1_plgprofile_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TenantProfiles) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TenantProfiles) ProtoMessage() {}

func (x *TenantProfiles) ProtoReflect() protoreflect.Message {
	mi := &file_api_profile_v1_plgprofile_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TenantProfiles.ProtoReflect.Descriptor instead.
func (*TenantProfiles) Descriptor() ([]byte, []int) {
	return file_api_profile_v1_plgprofile_proto_rawDescGZIP(), []int{2}
}

func (x *TenantProfiles) GetProfiles() map[string]int32 {
	if x != nil {
		return x.Profiles
	}
	return nil
}

type SetTenantPluginProfileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TenantId string          `protobuf:"bytes,1,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	Body     *TenantProfiles `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
}

func (x *SetTenantPluginProfileRequest) Reset() {
	*x = SetTenantPluginProfileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_profile_v1_plgprofile_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetTenantPluginProfileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetTenantPluginProfileRequest) ProtoMessage() {}

func (x *SetTenantPluginProfileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_profile_v1_plgprofile_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetTenantPluginProfileRequest.ProtoReflect.Descriptor instead.
func (*SetTenantPluginProfileRequest) Descriptor() ([]byte, []int) {
	return file_api_profile_v1_plgprofile_proto_rawDescGZIP(), []int{3}
}

func (x *SetTenantPluginProfileRequest) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *SetTenantPluginProfileRequest) GetBody() *TenantProfiles {
	if x != nil {
		return x.Body
	}
	return nil
}

type SetTenantPluginProfileResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetTenantPluginProfileResponse) Reset() {
	*x = SetTenantPluginProfileResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_profile_v1_plgprofile_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetTenantPluginProfileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetTenantPluginProfileResponse) ProtoMessage() {}

func (x *SetTenantPluginProfileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_profile_v1_plgprofile_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetTenantPluginProfileResponse.ProtoReflect.Descriptor instead.
func (*SetTenantPluginProfileResponse) Descriptor() ([]byte, []int) {
	return file_api_profile_v1_plgprofile_proto_rawDescGZIP(), []int{4}
}

type GetProfileSchemaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Profile string `protobuf:"bytes,1,opt,name=profile,proto3" json:"profile,omitempty"`
}

func (x *GetProfileSchemaRequest) Reset() {
	*x = GetProfileSchemaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_profile_v1_plgprofile_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProfileSchemaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProfileSchemaRequest) ProtoMessage() {}

func (x *GetProfileSchemaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_profile_v1_plgprofile_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProfileSchemaRequest.ProtoReflect.Descriptor instead.
func (*GetProfileSchemaRequest) Descriptor() ([]byte, []int) {
	return file_api_profile_v1_plgprofile_proto_rawDescGZIP(), []int{5}
}

func (x *GetProfileSchemaRequest) GetProfile() string {
	if x != nil {
		return x.Profile
	}
	return ""
}

type GetProfileSchemaResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Schema *Schema `protobuf:"bytes,1,opt,name=schema,proto3" json:"schema,omitempty"`
}

func (x *GetProfileSchemaResponse) Reset() {
	*x = GetProfileSchemaResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_profile_v1_plgprofile_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProfileSchemaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProfileSchemaResponse) ProtoMessage() {}

func (x *GetProfileSchemaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_profile_v1_plgprofile_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProfileSchemaResponse.ProtoReflect.Descriptor instead.
func (*GetProfileSchemaResponse) Descriptor() ([]byte, []int) {
	return file_api_profile_v1_plgprofile_proto_rawDescGZIP(), []int{6}
}

func (x *GetProfileSchemaResponse) GetSchema() *Schema {
	if x != nil {
		return x.Schema
	}
	return nil
}

type Schema struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type                 string                    `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Properties           map[string]*ProfileSchema `protobuf:"bytes,2,rep,name=properties,proto3" json:"properties,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Required             []string                  `protobuf:"bytes,3,rep,name=required,proto3" json:"required,omitempty"`
	AdditionalProperties bool                      `protobuf:"varint,4,opt,name=additionalProperties,proto3" json:"additionalProperties,omitempty"`
}

func (x *Schema) Reset() {
	*x = Schema{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_profile_v1_plgprofile_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Schema) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Schema) ProtoMessage() {}

func (x *Schema) ProtoReflect() protoreflect.Message {
	mi := &file_api_profile_v1_plgprofile_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Schema.ProtoReflect.Descriptor instead.
func (*Schema) Descriptor() ([]byte, []int) {
	return file_api_profile_v1_plgprofile_proto_rawDescGZIP(), []int{7}
}

func (x *Schema) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Schema) GetProperties() map[string]*ProfileSchema {
	if x != nil {
		return x.Properties
	}
	return nil
}

func (x *Schema) GetRequired() []string {
	if x != nil {
		return x.Required
	}
	return nil
}

func (x *Schema) GetAdditionalProperties() bool {
	if x != nil {
		return x.AdditionalProperties
	}
	return false
}

type ProfileSchema struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type        string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Title       string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Default     int32  `protobuf:"varint,4,opt,name=default,proto3" json:"default,omitempty"`
	MultipleOf  int32  `protobuf:"varint,5,opt,name=multipleOf,proto3" json:"multipleOf,omitempty"`
	Minimum     int32  `protobuf:"varint,6,opt,name=minimum,proto3" json:"minimum,omitempty"`
	Maximum     int32  `protobuf:"varint,7,opt,name=maximum,proto3" json:"maximum,omitempty"`
}

func (x *ProfileSchema) Reset() {
	*x = ProfileSchema{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_profile_v1_plgprofile_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProfileSchema) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfileSchema) ProtoMessage() {}

func (x *ProfileSchema) ProtoReflect() protoreflect.Message {
	mi := &file_api_profile_v1_plgprofile_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfileSchema.ProtoReflect.Descriptor instead.
func (*ProfileSchema) Descriptor() ([]byte, []int) {
	return file_api_profile_v1_plgprofile_proto_rawDescGZIP(), []int{8}
}

func (x *ProfileSchema) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ProfileSchema) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ProfileSchema) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ProfileSchema) GetDefault() int32 {
	if x != nil {
		return x.Default
	}
	return 0
}

func (x *ProfileSchema) GetMultipleOf() int32 {
	if x != nil {
		return x.MultipleOf
	}
	return 0
}

func (x *ProfileSchema) GetMinimum() int32 {
	if x != nil {
		return x.Minimum
	}
	return 0
}

func (x *ProfileSchema) GetMaximum() int32 {
	if x != nil {
		return x.Maximum
	}
	return 0
}

type TenantEnableRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TenantId string `protobuf:"bytes,1,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"` // unique tenant id.
	Extra    []byte `protobuf:"bytes,2,opt,name=extra,proto3" json:"extra,omitempty"`                       // extra data
}

func (x *TenantEnableRequest) Reset() {
	*x = TenantEnableRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_profile_v1_plgprofile_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TenantEnableRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TenantEnableRequest) ProtoMessage() {}

func (x *TenantEnableRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_profile_v1_plgprofile_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TenantEnableRequest.ProtoReflect.Descriptor instead.
func (*TenantEnableRequest) Descriptor() ([]byte, []int) {
	return file_api_profile_v1_plgprofile_proto_rawDescGZIP(), []int{9}
}

func (x *TenantEnableRequest) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *TenantEnableRequest) GetExtra() []byte {
	if x != nil {
		return x.Extra
	}
	return nil
}

var File_api_profile_v1_plgprofile_proto protoreflect.FileDescriptor

var file_api_profile_v1_plgprofile_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2f, 0x76, 0x31,
	0x2f, 0x70, 0x6c, 0x67, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x1e, 0x69, 0x6f, 0x2e, 0x74, 0x6b, 0x65, 0x65, 0x6c, 0x2e, 0x72, 0x75, 0x64, 0x64,
	0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x76,
	0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e,
	0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x5f, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65,
	0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61,
	0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x4c, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x2d, 0x0a, 0x09, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x10, 0x92, 0x41, 0x0a, 0x32, 0x08, 0xe7, 0xa7, 0x9f, 0xe6, 0x88, 0xb7, 0x49,
	0x44, 0xe0, 0x41, 0x02, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xd6,
	0x01, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x79, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x4a, 0x2e, 0x69, 0x6f, 0x2e, 0x74, 0x6b, 0x65, 0x65, 0x6c, 0x2e, 0x72, 0x75, 0x64,
	0x64, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x11, 0x92,
	0x41, 0x0e, 0x32, 0x0c, 0xe7, 0xa7, 0x9f, 0xe6, 0x88, 0xb7, 0xe9, 0x85, 0x8d, 0xe7, 0xbd, 0xae,
	0x52, 0x08, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x1a, 0x3b, 0x0a, 0x0d, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xbe, 0x01, 0x0a, 0x0e, 0x54, 0x65, 0x6e, 0x61,
	0x6e, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x6f, 0x0a, 0x08, 0x70, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x69,
	0x6f, 0x2e, 0x74, 0x6b, 0x65, 0x65, 0x6c, 0x2e, 0x72, 0x75, 0x64, 0x64, 0x65, 0x72, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65,
	0x6e, 0x61, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2e, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x15, 0x92, 0x41, 0x12, 0x32,
	0x10, 0xe7, 0xa7, 0x9f, 0xe6, 0x88, 0xb7, 0xe9, 0x85, 0x8d, 0xe7, 0xbd, 0xae, 0x20, 0x6b, 0x3a,
	0x76, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x1a, 0x3b, 0x0a, 0x0d, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x92, 0x01, 0x0a, 0x1d, 0x53, 0x65, 0x74,
	0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x09, 0x74, 0x65,
	0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x10, 0x92,
	0x41, 0x0a, 0x32, 0x08, 0xe7, 0xa7, 0x9f, 0xe6, 0x88, 0xb7, 0x49, 0x44, 0xe0, 0x41, 0x02, 0x52,
	0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x42, 0x0a, 0x04, 0x62, 0x6f, 0x64,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x69, 0x6f, 0x2e, 0x74, 0x6b, 0x65,
	0x65, 0x6c, 0x2e, 0x72, 0x75, 0x64, 0x64, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x22, 0x20, 0x0a,
	0x1e, 0x53, 0x65, 0x74, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x47, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x07, 0x70, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x12, 0x92, 0x41, 0x0c,
	0x32, 0x0a, 0xe9, 0x85, 0x8d, 0xe7, 0xbd, 0xae, 0x20, 0x6b, 0x65, 0x79, 0xe0, 0x41, 0x01, 0x52,
	0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x22, 0x5a, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x69, 0x6f, 0x2e, 0x74, 0x6b, 0x65, 0x65, 0x6c, 0x2e,
	0x72, 0x75, 0x64, 0x64, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x06, 0x73, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x22, 0xf4, 0x04, 0x0a, 0x06, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12,
	0x5b, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x47, 0x92,
	0x41, 0x41, 0x32, 0x3f, 0xe9, 0x85, 0x8d, 0xe7, 0xbd, 0xae, 0x20, 0x73, 0x63, 0x68, 0x65, 0x6d,
	0x65, 0x20, 0x74, 0x79, 0x70, 0x65, 0xef, 0xbc, 0x8c, 0xe5, 0x8f, 0x82, 0xe8, 0x80, 0x83, 0x6a,
	0x73, 0x6f, 0x6e, 0x20, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x28, 0x68, 0x74, 0x74, 0x70, 0x73,
	0x3a, 0x2f, 0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x2d, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x6f,
	0x72, 0x67, 0x29, 0xe0, 0x41, 0x02, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0xa5, 0x01, 0x0a,
	0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x36, 0x2e, 0x69, 0x6f, 0x2e, 0x74, 0x6b, 0x65, 0x65, 0x6c, 0x2e, 0x72, 0x75, 0x64,
	0x64, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x69, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x4d, 0x92, 0x41, 0x47, 0x32, 0x45,
	0xe9, 0x85, 0x8d, 0xe7, 0xbd, 0xae, 0x20, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x20, 0x70, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0xef, 0xbc, 0x8c, 0xe5, 0x8f, 0x82, 0xe8, 0x80,
	0x83, 0x6a, 0x73, 0x6f, 0x6e, 0x20, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x28, 0x68, 0x74, 0x74,
	0x70, 0x73, 0x3a, 0x2f, 0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x2d, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x2e, 0x6f, 0x72, 0x67, 0x29, 0xe0, 0x41, 0x02, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x69, 0x65, 0x73, 0x12, 0x68, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x42, 0x4c, 0x92, 0x41, 0x46, 0x32, 0x44, 0xe9, 0x85, 0x8d,
	0xe7, 0xbd, 0xae, 0x20, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x20, 0x72, 0x65, 0x71, 0x75, 0x69,
	0x72, 0x65, 0x64, 0xef, 0xbc, 0x8c, 0xe5, 0x8f, 0x82, 0xe8, 0x80, 0x83, 0x6a, 0x73, 0x6f, 0x6e,
	0x20, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x20, 0x28, 0x68, 0x74, 0x74, 0x70, 0x73, 0x3a, 0x2f,
	0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x2d, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x6f, 0x72, 0x67,
	0x29, 0xe0, 0x41, 0x02, 0x52, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x12, 0x8c,
	0x01, 0x0a, 0x14, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x42, 0x58, 0x92,
	0x41, 0x52, 0x32, 0x50, 0xe9, 0x85, 0x8d, 0xe7, 0xbd, 0xae, 0x20, 0x73, 0x63, 0x68, 0x65, 0x6d,
	0x65, 0x20, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0xef, 0xbc, 0x8c, 0xe5, 0x8f, 0x82, 0xe8, 0x80, 0x83, 0x6a,
	0x73, 0x6f, 0x6e, 0x20, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x20, 0x28, 0x68, 0x74, 0x74, 0x70,
	0x73, 0x3a, 0x2f, 0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x2d, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e,
	0x6f, 0x72, 0x67, 0x29, 0xe0, 0x41, 0x02, 0x52, 0x14, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x1a, 0x6c, 0x0a,
	0x0f, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x43, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2d, 0x2e, 0x69, 0x6f, 0x2e, 0x74, 0x6b, 0x65, 0x65, 0x6c, 0x2e, 0x72, 0x75, 0x64,
	0x64, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xc9, 0x01, 0x0a, 0x0d,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x4f,
	0x66, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c,
	0x65, 0x4f, 0x66, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x6d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d, 0x22, 0x48, 0x0a, 0x13, 0x54, 0x65, 0x6e, 0x61, 0x6e,
	0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65,
	0x78, 0x74, 0x72, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x65, 0x78, 0x74, 0x72,
	0x61, 0x32, 0xe7, 0x05, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0xe9, 0x01,
	0x0a, 0x10, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x12, 0x37, 0x2e, 0x69, 0x6f, 0x2e, 0x74, 0x6b, 0x65, 0x65, 0x6c, 0x2e, 0x72, 0x75,
	0x64, 0x64, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x69, 0x6f,
	0x2e, 0x74, 0x6b, 0x65, 0x65, 0x6c, 0x2e, 0x72, 0x75, 0x64, 0x64, 0x65, 0x72, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x62, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x11, 0x12, 0x0f, 0x2f,
	0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x92, 0x41,
	0x48, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x1e, 0xe8, 0x8e, 0xb7, 0xe5,
	0x8f, 0x96, 0xe5, 0xb9, 0xb3, 0xe5, 0x8f, 0xb0, 0xe7, 0xa7, 0x9f, 0xe6, 0x88, 0xb7, 0xe9, 0x85,
	0x8d, 0xe7, 0xbd, 0xae, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2a, 0x10, 0x47, 0x65, 0x74, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x4a, 0x0b, 0x0a, 0x03,
	0x32, 0x30, 0x30, 0x12, 0x04, 0x0a, 0x02, 0x4f, 0x4b, 0x12, 0xf1, 0x01, 0x0a, 0x14, 0x47, 0x65,
	0x74, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x3b, 0x2e, 0x69, 0x6f, 0x2e, 0x74, 0x6b, 0x65, 0x65, 0x6c, 0x2e, 0x72, 0x75,
	0x64, 0x64, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x3c, 0x2e, 0x69, 0x6f, 0x2e, 0x74, 0x6b, 0x65, 0x65, 0x6c, 0x2e, 0x72, 0x75, 0x64, 0x64, 0x65,
	0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5e, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x0f, 0x12, 0x0d, 0x2f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2f,
	0x64, 0x61, 0x74, 0x61, 0x92, 0x41, 0x46, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x12, 0x18, 0xe8, 0x8e, 0xb7, 0xe5, 0x8f, 0x96, 0xe5, 0xb9, 0xb3, 0xe5, 0x8f, 0xb0, 0xe7, 0xa7,
	0x9f, 0xe6, 0x88, 0xb7, 0xe9, 0x85, 0x8d, 0xe7, 0xbd, 0xae, 0x2a, 0x14, 0x47, 0x65, 0x74, 0x54,
	0x65, 0x6e, 0x61, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x4a, 0x0b, 0x0a, 0x03, 0x32, 0x30, 0x30, 0x12, 0x04, 0x0a, 0x02, 0x4f, 0x4b, 0x12, 0xfb, 0x01,
	0x0a, 0x14, 0x53, 0x65, 0x74, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x3d, 0x2e, 0x69, 0x6f, 0x2e, 0x74, 0x6b, 0x65, 0x65,
	0x6c, 0x2e, 0x72, 0x75, 0x64, 0x64, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x54, 0x65, 0x6e, 0x61, 0x6e,
	0x74, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3e, 0x2e, 0x69, 0x6f, 0x2e, 0x74, 0x6b, 0x65, 0x65, 0x6c,
	0x2e, 0x72, 0x75, 0x64, 0x64, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x64, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x22, 0x0d, 0x2f,
	0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x3a, 0x04, 0x62, 0x6f,
	0x64, 0x79, 0x92, 0x41, 0x46, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x18,
	0xe8, 0xae, 0xbe, 0xe7, 0xbd, 0xae, 0xe5, 0xb9, 0xb3, 0xe5, 0x8f, 0xb0, 0xe7, 0xa7, 0x9f, 0xe6,
	0x88, 0xb7, 0xe9, 0x85, 0x8d, 0xe7, 0xbd, 0xae, 0x2a, 0x14, 0x53, 0x65, 0x74, 0x54, 0x65, 0x6e,
	0x61, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x4a, 0x0b,
	0x0a, 0x03, 0x32, 0x30, 0x30, 0x12, 0x04, 0x0a, 0x02, 0x4f, 0x4b, 0x42, 0x2d, 0x5a, 0x2b, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x6b, 0x65, 0x65, 0x6c, 0x2d,
	0x69, 0x6f, 0x2f, 0x74, 0x6b, 0x65, 0x65, 0x6c, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_api_profile_v1_plgprofile_proto_rawDescOnce sync.Once
	file_api_profile_v1_plgprofile_proto_rawDescData = file_api_profile_v1_plgprofile_proto_rawDesc
)

func file_api_profile_v1_plgprofile_proto_rawDescGZIP() []byte {
	file_api_profile_v1_plgprofile_proto_rawDescOnce.Do(func() {
		file_api_profile_v1_plgprofile_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_profile_v1_plgprofile_proto_rawDescData)
	})
	return file_api_profile_v1_plgprofile_proto_rawDescData
}

var file_api_profile_v1_plgprofile_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_api_profile_v1_plgprofile_proto_goTypes = []interface{}{
	(*GetTenantProfileDataRequest)(nil),    // 0: io.tkeel.rudder.api.profile.v1.GetTenantProfileDataRequest
	(*GetTenantProfileDataResponse)(nil),   // 1: io.tkeel.rudder.api.profile.v1.GetTenantProfileDataResponse
	(*TenantProfiles)(nil),                 // 2: io.tkeel.rudder.api.profile.v1.TenantProfiles
	(*SetTenantPluginProfileRequest)(nil),  // 3: io.tkeel.rudder.api.profile.v1.SetTenantPluginProfileRequest
	(*SetTenantPluginProfileResponse)(nil), // 4: io.tkeel.rudder.api.profile.v1.SetTenantPluginProfileResponse
	(*GetProfileSchemaRequest)(nil),        // 5: io.tkeel.rudder.api.profile.v1.GetProfileSchemaRequest
	(*GetProfileSchemaResponse)(nil),       // 6: io.tkeel.rudder.api.profile.v1.GetProfileSchemaResponse
	(*Schema)(nil),                         // 7: io.tkeel.rudder.api.profile.v1.Schema
	(*ProfileSchema)(nil),                  // 8: io.tkeel.rudder.api.profile.v1.ProfileSchema
	(*TenantEnableRequest)(nil),            // 9: io.tkeel.rudder.api.profile.v1.TenantEnableRequest
	nil,                                    // 10: io.tkeel.rudder.api.profile.v1.GetTenantProfileDataResponse.ProfilesEntry
	nil,                                    // 11: io.tkeel.rudder.api.profile.v1.TenantProfiles.ProfilesEntry
	nil,                                    // 12: io.tkeel.rudder.api.profile.v1.Schema.PropertiesEntry
}
var file_api_profile_v1_plgprofile_proto_depIdxs = []int32{
	10, // 0: io.tkeel.rudder.api.profile.v1.GetTenantProfileDataResponse.profiles:type_name -> io.tkeel.rudder.api.profile.v1.GetTenantProfileDataResponse.ProfilesEntry
	11, // 1: io.tkeel.rudder.api.profile.v1.TenantProfiles.profiles:type_name -> io.tkeel.rudder.api.profile.v1.TenantProfiles.ProfilesEntry
	2,  // 2: io.tkeel.rudder.api.profile.v1.SetTenantPluginProfileRequest.body:type_name -> io.tkeel.rudder.api.profile.v1.TenantProfiles
	7,  // 3: io.tkeel.rudder.api.profile.v1.GetProfileSchemaResponse.schema:type_name -> io.tkeel.rudder.api.profile.v1.Schema
	12, // 4: io.tkeel.rudder.api.profile.v1.Schema.properties:type_name -> io.tkeel.rudder.api.profile.v1.Schema.PropertiesEntry
	8,  // 5: io.tkeel.rudder.api.profile.v1.Schema.PropertiesEntry.value:type_name -> io.tkeel.rudder.api.profile.v1.ProfileSchema
	5,  // 6: io.tkeel.rudder.api.profile.v1.Profile.GetProfileSchema:input_type -> io.tkeel.rudder.api.profile.v1.GetProfileSchemaRequest
	0,  // 7: io.tkeel.rudder.api.profile.v1.Profile.GetTenantProfileData:input_type -> io.tkeel.rudder.api.profile.v1.GetTenantProfileDataRequest
	3,  // 8: io.tkeel.rudder.api.profile.v1.Profile.SetTenantProfileData:input_type -> io.tkeel.rudder.api.profile.v1.SetTenantPluginProfileRequest
	6,  // 9: io.tkeel.rudder.api.profile.v1.Profile.GetProfileSchema:output_type -> io.tkeel.rudder.api.profile.v1.GetProfileSchemaResponse
	1,  // 10: io.tkeel.rudder.api.profile.v1.Profile.GetTenantProfileData:output_type -> io.tkeel.rudder.api.profile.v1.GetTenantProfileDataResponse
	4,  // 11: io.tkeel.rudder.api.profile.v1.Profile.SetTenantProfileData:output_type -> io.tkeel.rudder.api.profile.v1.SetTenantPluginProfileResponse
	9,  // [9:12] is the sub-list for method output_type
	6,  // [6:9] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_api_profile_v1_plgprofile_proto_init() }
func file_api_profile_v1_plgprofile_proto_init() {
	if File_api_profile_v1_plgprofile_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_profile_v1_plgprofile_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTenantProfileDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_profile_v1_plgprofile_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTenantProfileDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_profile_v1_plgprofile_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TenantProfiles); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_profile_v1_plgprofile_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetTenantPluginProfileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_profile_v1_plgprofile_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetTenantPluginProfileResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_profile_v1_plgprofile_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProfileSchemaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_profile_v1_plgprofile_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProfileSchemaResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_profile_v1_plgprofile_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Schema); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_profile_v1_plgprofile_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProfileSchema); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_profile_v1_plgprofile_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TenantEnableRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_profile_v1_plgprofile_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_profile_v1_plgprofile_proto_goTypes,
		DependencyIndexes: file_api_profile_v1_plgprofile_proto_depIdxs,
		MessageInfos:      file_api_profile_v1_plgprofile_proto_msgTypes,
	}.Build()
	File_api_profile_v1_plgprofile_proto = out.File
	file_api_profile_v1_plgprofile_proto_rawDesc = nil
	file_api_profile_v1_plgprofile_proto_goTypes = nil
	file_api_profile_v1_plgprofile_proto_depIdxs = nil
}
