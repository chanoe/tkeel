/*
Copyright 2021 The tKeel Authors.
Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

syntax = "proto3";

package io.tkeel.rudder.api.rbac.v1;

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "openapi/v1/openapi.proto";

option go_package = "github.com/tkeel-io/tkeel/api/rbac/v1;v1";
option java_multiple_files = true;
option java_package = "io.tkeel.rudder.api.rbac.v1";

service RBAC {
  rpc CreateRoles(CreateRoleRequest) returns (CreateRoleResponse) {
    option (google.api.http) = {
      post : "/rbac/roles"
      body : "role"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary : "创建角色"
      operation_id : "CreateRole"
      tags : "RBAC"
      responses : [ {
        key : "200"
        value : {description : "OK"}
      } ]
    };
  };

  rpc ListRole(ListRolesRequest) returns (ListRolesResponse) {
    option (google.api.http) = {
      get : "/rbac/roles"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary : "角色列表"
      operation_id : "ListRole"
      tags : "RBAC"
      responses : [ {
        key : "200"
        value : {description : "OK"}
      } ]
    };
  };

  rpc GetRole(GetRoleRequest) returns (GetRoleResponse) {
    option (google.api.http) = {
      get : "/rbac/roles/{id}"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary : "获取角色详情"
      operation_id : "GetRole"
      tags : "RBAC"
      responses : [ {
        key : "200"
        value : {description : "OK"}
      } ]
    };
  };

  rpc DeleteRole(DeleteRoleRequest) returns (DeleteRoleResponse) {
    option (google.api.http) = {
      delete : "/rbac/roles/{id}"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary : "删除角色"
      operation_id : "DeleteRole"
      tags : "RBAC"
      responses : [ {
        key : "200"
        value : {description : "OK"}
      } ]
    };
  };

  rpc UpdateRole(UpdateRoleRequest) returns (UpdateRoleResponse) {
    option (google.api.http) = {
      put : "/rbac/roles/{id}"
      body : "role"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary : "修改角色信息"
      operation_id : "UpdateRole"
      tags : "RBAC"
      responses : [ {
        key : "200"
        value : {description : "OK"}
      } ]
    };
  };

  rpc UpdateUserRoleBinding(UpdateUserRoleBindingRequest)
      returns (google.protobuf.Empty) {
    option (google.api.http) = {
      put : "/rbac/users/{user_id}/roles"
      body : "role_id_list"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary : "全量更新用户角色"
      operation_id : "UpdateUserRoleBinding"
      tags : "RBAC"
      responses : [ {
        key : "200"
        value : {description : "OK"}
      } ]
    };
  };

  rpc CreateRoleBinding(CreateRoleBindingRequest)
      returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post : "/rbac/roles/{role_id}/users"
      body : "users"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary : "为用户添加角色"
      operation_id : "CreateRoleBinding"
      tags : "RBAC"
      responses : [ {
        key : "200"
        value : {description : "OK"}
      } ]
    };
  };

  rpc DeleteRoleBinding(DeleteRoleBindingRequest)
      returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete : "/rbac/roles/{role_id}/users/{user_id}"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary : "删除用户角色"
      operation_id : "DeleteRoleBinding"
      tags : "RBAC"
      responses : [ {
        key : "200"
        value : {description : "OK"}
      } ]
    };
  };

  rpc ListPermissions(ListPermissionRequest) returns (ListPermissionResponse) {
    option (google.api.http) = {
      get : "/rbac/permissions"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary : "权限列表"
      operation_id : "ListPermissions"
      tags : "RBAC"
      responses : [ {
        key : "200"
        value : {description : "OK"}
      } ]
    };
  };

  rpc CheckRolePermission(CheckRolePermissionRequest)
      returns (CheckRolePermissionResponse) {
    option (google.api.http) = {
      post : "/rbac/permissions/check"
      body : "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary : "权限校验"
      operation_id : "CheckRolePermission"
      tags : "RBAC"
      responses : [ {
        key : "200"
        value : {description : "OK"}
      } ]
    };
  };
  rpc TMAddPolicy(TMPolicyRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post : "/tkeel-manager/rbac/policy"
      body : "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary : "TM add policy 测试专用"
      operation_id : "TMAddPolicy"
      tags: ["RBAC","Internal"]
      responses : [ {
        key : "200"
        value : {description : "OK"}
      } ]
    };
  };
  rpc TMDeletePolicy(TMPolicyRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post : "/tkeel-manager/rbac/policy/delete"
      body : "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary : "TM delete policy 测试专用"
      operation_id : "TMDeletePolicy"
      tags: ["RBAC","Internal"]
      responses : [ {
        key : "200"
        value : {description : "OK"}
      } ]
    };
  };
  rpc TMAddRoleBinding(TMRoleBindingRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post : "/tkeel-manager/rbac/binding"
      body : "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary : "TM add policy 测试专用"
      operation_id : "TMAddRoleBinding"
      tags: ["RBAC","Internal"]
      responses : [ {
        key : "200"
        value : {description : "OK"}
      } ]
    };
  };
  rpc TMDeleteRoleBinding(TMRoleBindingRequest)
      returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post : "/tkeel-manager/rbac/binding/delete"
      body : "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary : "TM delete policy 测试专用"
      operation_id : "TMDeleteRoleBinding"
      tags: ["RBAC","Internal"]
      responses : [ {
        key : "200"
        value : {description : "OK"}
      } ]
    };
  };
}

message TMPolicyRequest {
  string role = 1[ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description : "-"
  } ];
  string tenant = 2[ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description : "-"
  } ];
  string permission = 3[ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description : "-"
  } ];
}

message TMRoleBindingRequest {
  string user = 1[ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description : "-"
  } ];
  string role = 2[ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description : "-"
  } ];
  string tenant = 3[ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description : "-"
  } ];
}

message Permission {
  string path = 1
      [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description : "权限路径"
      } ];
  openapi.v1.Permission permission = 2
      [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description : "权限"
      } ];
}

message Role {
  string id = 1
      [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description : "角色 id"
      } ]; // tenant role name.
  string name = 2
      [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description : "角色名称"
      } ]; // tenant role name.
  string desc = 3
      [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description : "角色描述"
      } ];
  int32 bind_num = 4
      [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description : "绑定数量"
      } ];
  uint64 upsert_timestamp = 5
      [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description : "时间戳"
      } ];
  repeated Permission permission_list = 6
      [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description : "权限列表"
      } ];
  bool uneditable = 7
      [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description : "可编辑"
      } ];
}

message CreateRoleRequest {
  Role role = 1
      [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description : "角色"
      } ];
}

message CreateRoleResponse {
  Role role = 1
      [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description : "角色"
      } ];
}

message GetRoleRequest {
  string id = 1
      [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description : "角色ID"
      } ];
}

message GetRoleResponse {
  Role role = 1
      [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description : "角色"
      } ];
}

message DeleteRoleRequest {
  string id = 1
      [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description : "角色ID"
      } ];
}

message DeleteRoleResponse {
  Role role = 1
      [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description : "角色"
      } ];
}

message UpdateRoleRequest {
  string id = 1
      [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description : "角色ID"
      } ];
  Role role = 2
      [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description : "角色"
      } ];
}

message UpdateRoleResponse {
  Role role = 1
      [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description : "角色"
      } ];
}

message ListRolesRequest {
  int32 page_num = 1
      [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description : "页数"
      } ];
  int32 page_size = 2
      [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description : "每页大小"
      } ];
  string order_by = 3
      [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description : "排序"
      } ];
  bool is_descending = 4
      [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description : "排序顺序"
      } ];
  string key_words = 5
      [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description : "关键字"
      } ];
  string tenant_id = 10
      [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description : "租户ID"
      } ];
}

message ListRolesResponse {
  int32 page_num = 1
      [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description : "页数"
      } ];
  int32 page_size = 2
      [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description : "页大小"
      } ];
  int32 total = 3
      [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description : "总数"
      } ];
  repeated Role roles = 10
      [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description : "角色列表"
      } ];
  string tenant_id = 11
      [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description : "租户ID"
      } ];
}

message CreateRoleBindingRequest {
  string role_id = 1
      [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description : "角色ID"
      } ];
  message UserList {
    repeated string id = 1
        [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          description : "用户ID"
        } ];
  }
  UserList users = 2
      [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description : "用户列表"
      } ];
}

message DeleteRoleBindingRequest {
  string role_id = 1
      [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description : "角色ID"
      } ];
  string user_id = 2
      [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description : "用户ID"
      } ];
}

message ListPermissionRequest {
  string key_words = 1
      [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description : "关键字"
      } ]; // permission name search words.
  string role = 10
      [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description : "角色"
      } ]; // tenant role name.
}
message ListPermissionResponse {
  repeated Permission permissions = 1
      [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description : "权限"
      } ];
}

message CheckRolePermissionRequest {
  string path = 1
      [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description : "权限"
      } ];
}

message CheckRolePermissionResponse {
  bool allowed = 1
      [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description : "是否允许"
      } ];
}

message UpdateUserRoleBindingRequest {
  string user_id = 1
      [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description : "用户ID"
      } ];
  message RoleIDList {
    repeated string roles = 1
        [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          description : "角色列表"
        } ];
  }
  RoleIDList role_id_list = 2
      [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description : "绑定列表"
      } ];
}