/*
Copyright 2021 The tKeel Authors.
Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

syntax = "proto3";

package io.tkeel.security.api.tenant.v1;

import "google/api/annotations.proto";
import "google/api/field_behavior.proto";
import "google/protobuf/empty.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "github.com/tkeel-io/tkeel/api/tenant/v1;v1";
option java_multiple_files = true;
option java_package = "io.tkeel.security.api.tenant.v1";

// The greeting service definition.
service Tenant {
  // create a tenant.
  rpc CreateTenant(CreateTenantRequest) returns (CreateTenantResponse) {
    option (google.api.http) = {
      post : "/tenants"
      body : "body"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary : "创建租户"
      operation_id : "CreateTenant"
      tags : "Tenant"
      responses : [
        {
          key : "200"
          value : {description : "OK"}
        },
        {
          key : "400"
          value : {description : "INVALID_ARGUMENT"}
        },
        {
          key : "409"
          value : {description : "ALREADY_EXISTS"}
        },
        {
          key : "500"
          value : {description : "UNEXPECT_INTERNAL"}
        }
      ]
    };
  }

  // get a tenant.
  rpc GetTenant(GetTenantRequest) returns (GetTenantResponse) {
    option (google.api.http) = {
      get : "/tenants/{tenant_id}"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary : "获取租户详情"
      operation_id : "GetTenant"
      tags : "Tenant"
      responses : [ {
        key : "200"
        value : {description : "OK"}
      } ]
    };
  }

  // list tenant.
  rpc ListTenant(ListTenantRequest) returns (ListTenantResponse) {
    option (google.api.http) = {
      get : "/tenants"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary : "获取租户列表"
      operation_id : "ListTenant"
      tags : "Tenant"
      responses : [ {
        key : "200"
        value : {description : "OK"}
      } ]
    };
  }

  // exact search by title (open for auth).
  rpc TenantByExactSearch(ExactTenantRequest)returns(ExactTenantResponse){
    option (google.api.http) = {
      get : "/tenants/exact"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary : "租户认证方式查询"
      operation_id : "TenantByExactSearch"
      tags : "Tenant"
      responses : [ {
        key : "200"
        value : {description : "OK"}
      } ]
    };

  }

  // update tenant.
  rpc UpdateTenant(UpdateTenantRequest) returns (UpdateTenantResponse) {
    option (google.api.http) = {
      put : "/tenants/{tenant_id}"
      body : "body"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary : "修改租户信息"
      operation_id : "UpdateTenant"
      tags : "Tenant"
      responses : [ {
        key : "200"
        value : {description : "OK"}
      } ]
    };
  }

  // delete a tenant.
  rpc DeleteTenant(DeleteTenantRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete : "/tenants/{tenant_id}"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary : "删除租户"
      operation_id : "DeleteTenant"
      tags : "Tenant"
      responses : [ {
        key : "200"
        value : {description : "OK"}
      } ]
    };
  }

  // create a user.
  rpc CreateUser(CreateUserRequest) returns (CreateUserResponse) {
    option (google.api.http) = {
      post : "/tenants/{tenant_id}/users"
      body : "body"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary : "创建用户"
      operation_id : "CreateUser"
      tags : "Tenant"
      responses : [ {
        key : "200"
        value : {description : "OK"}
      } ]
    };
  }

  //  get user.
  rpc GetUser(GetUserRequest) returns (GetUserResponse) {
    option (google.api.http) = {
      get : "/tenants/{tenant_id}/users/{user_id}"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary : "获取用户信息"
      operation_id : "GetUser"
      tags : "Tenant"
      responses : [ {
        key : "200"
        value : {description : "OK"}
      } ]
    };
  }

  // list user.
  rpc ListUser(ListUserRequest) returns (ListUserResponse) {
    option (google.api.http) = {
      get : "/tenants/{tenant_id}/users"
    };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary : "查询用户列表"
      operation_id : "ListUser"
      tags : "Tenant"
      responses : [ {
        key : "200"
        value : {description : "OK"}
      } ]
    };
  }

  // delete a user.
  rpc DeleteUser(DeleteUserRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete : "/tenants/{tenant_id}/users/{user_id}"
    };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary : "删除用户"
      operation_id : "DeleteUser"
      tags : "Tenant"
      responses : [ {
        key : "200"
        value : {description : "OK"}
      } ]
    };
  };

  // update user
  rpc UpdateUser(UpdateUserRequest)returns(UpdateUserResponse){
    option (google.api.http) = {
      put : "/tenants/{tenant_id}/users/{user_id}"
      body : "body"
    };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary : "修改用户信息"
      operation_id : "UpdateUser"
      tags : "Tenant"
      responses : [ {
        key : "200"
        value : {description : "OK"}
      } ]
    };

  }

  // add a plugin
  rpc AddTenantPlugin(AddTenantPluginRequest)
      returns (AddTenantPluginResponse) {
    option (google.api.http) = {
      post : "/tenants/{tenant_id}/plugins"
      body : "body"
    };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary : "租户启用插件"
      operation_id : "AddPlugin"
      tags : "Tenant"
      responses : [ {
        key : "200"
        value : {description : "OK"}
      } ]
    };
  }

  // list plugin
  rpc ListTenantPlugin(ListTenantPluginRequest)
      returns (ListTenantPluginResponse) {
    option (google.api.http) = {
      get : "/tenants/{tenant_id}/plugins"
    };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary : "租户插件列表"
      operation_id : "ListTenantPlugin"
      tags : "Tenant"
      responses : [ {
        key : "200"
        value : {description : "OK"}
      } ]
    };
  }

  // delete plugin
  rpc DeleteTenantPlugin(DeleteTenantPluginRequest)
      returns (DeleteTenantPluginResponse) {
    option (google.api.http) = {
      delete : "/tenants/{tenant_id}/plugins/{plugin_id}"
    };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary : "停用租户插件"
      operation_id : "DeleteTenantPlugin"
      tags : "Tenant"
      responses : [ {
        key : "200"
        value : {description : "OK"}
      } ]
    };
  };

  rpc TenantPluginPermissible(PluginPermissibleRequest)
      returns (PluginPermissibleResponse) {
    option (google.api.http) = {
      get : "/tenants/plugins/permissible"
    };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary : "租户插件权限校验"
      operation_id : "PermissibleTenantPlugin"
      tags : "Tenant"
      responses : [ {
        key : "200"
        value : {description : "OK"}
      } ]
    };
  }

  rpc GetResetPasswordKey(GetResetPasswordKeyRequest)
      returns (GetResetPasswordKeyResponse) {
    option (google.api.http) = {
      get : "/tenants/{tenant_id}/users/{user_id}/rpk"
    };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary : "获取重置密码密钥"
      operation_id : "GetResetPasswordKey"
      tags : "Tenant"
      responses : [ {
        key : "200"
        value : {description : "OK"}
      } ]
    };
  }

  rpc ResetPasswordKeyInfo(RPKInfoRequest)
      returns (RPKInfoResponse) {
    option (google.api.http) = {
      post : "/tenants/users/rpk/info"
      body : "body"
    };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary : "获取重置密码密钥信息"
      operation_id : "ResetPasswordKeyInfo"
      tags : "Tenant"
      responses : [ {
        key : "200"
        value : {description : "OK"}
      } ]
    };
  }
}

// The request message.
message CreateTenantRequest {
  TenantCreateBody body = 1 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description : "租户信息"
    },
    (google.api.field_behavior) = REQUIRED
  ];
}

message TenantCreateBody {
  string title = 1 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description : "租户空间名称"
    },
    (google.api.field_behavior) = REQUIRED
  ];
  string remark = 2 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description : "租户备注信息"
    },
    (google.api.field_behavior) = OPTIONAL
  ];
  string tenant_id = 3 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description : "租户 id"
    },
    (google.api.field_behavior) = OPTIONAL
  ];
  TenantAdmin admin = 4 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description : "租户管理员"
    },
    (google.api.field_behavior) = OPTIONAL
  ];
  string auth_type = 5 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description : "租户认证类型: internal | external"
    },
    (google.api.field_behavior) = OPTIONAL
  ];
  string id_provider_type = 6 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description : "外部认证协议类型: OIDC | LDAP | SMAL"
    },
    (google.api.field_behavior) = OPTIONAL
  ];
}

message TenantAdmin {
  string username = 1 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description : "用户名 username"
    },
    (google.api.field_behavior) = REQUIRED
  ];
  string password = 2 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description : "密码 password "
    },
    (google.api.field_behavior) = REQUIRED
  ];
}

// The response message containing the greetings
message CreateTenantResponse {
  string tenant_id = 1
      [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description : "租户ID"
      } ];
  string tenant_title = 2
      [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description : "租户空间名称"
      } ];
  string admin_username = 3
      [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description : "租户管理员 username"
      } ];
  string reset_key =4
  [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description : " 租户管理员 password"
  } ];
}

message GetTenantRequest {
  string tenant_id = 1
      [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description : "租户ID"
      } ];
}
message GetTenantResponse {
  string tenant_id = 1
      [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description : "租户ID"
      } ];
  string title = 2
      [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description : "租户空间名称"
      } ];
  string remark = 3
      [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description : "租户备注"
      } ];
  int64 created_at = 4
      [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description : "创建时间"
      } ];
  int32 num_user = 5
  [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description : "租户用户数"
  } ];
  repeated TenantAdmin admins = 6
  [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description : "租户管理员"
  } ];
  string auth_type = 7
  [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description : "认证类型 : internal / external"
  } ];
}
message ListTenantRequest {
  int32 page_num = 1 [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description : "页 page"
  } ];
  int32 page_size = 2 [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description : "页大小 page_siza"
  } ];
  string order_by = 3 [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description : "排序"
  } ];
  bool is_descending = 4 [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description : "倒序"
  } ];
  string key_words =5 [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description : "查询关键字"
  } ];
}

message ListTenantResponse {
  int32 total = 1;
  int32 page_num = 2;
  int32 page_size = 3;
  repeated TenantDetail tenants = 4
      [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description : "租户列表"
      } ];
}

message ExactTenantRequest {
  string title =1 [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description : "租户名称"
  } ];
  string tenant_id=2 [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description : "租户ID"
  } ];
}
message ExactTenantResponse {
  string tenant_id =1;
  string title =2;
  string auth_type =3;
}
message TenantDetail {
  string tenant_id = 1
      [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description : "租户ID"
      } ];
  string title = 2
      [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description : "租户名称"
      } ];
  string remark = 3
      [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description : "租户备注"
      } ];
  int32 num_user = 4
      [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description : "租户用户数"
      } ];
  int64 created_at =5
  [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description : "创建时间"
  } ];
  repeated string roles =6
  [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description : "角色列表"
  } ];
  repeated TenantAdmin admins = 7
  [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description : "管理员"
  } ];
  string auth_type = 8
  [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description : "认证类型 : internal / external"
  } ];
}

message UpdateTenantRequest {
  string tenant_id = 1 [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description : "租户ID"
  } ];
  UpdateTenantBody body =2;

}
 message UpdateTenantBody {
  string title =1 [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description : "租户空间名称"
  } ];
  string remark =2 [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description : "租户备注信息"
  } ];
 }
message UpdateTenantResponse{

}

message DeleteTenantRequest {
  string tenant_id = 1
      [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description : "租户ID"
      } ];
}

// user
message CreateUserRequest {
  string tenant_id = 1 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description : "租户ID"
    },
    (google.api.field_behavior) = REQUIRED
  ];
  CreateUserBody body = 2 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description : "用户信息"
    },
    (google.api.field_behavior) = REQUIRED
  ];
}

message CreateUserBody {
  string username = 1 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description : "用户名"
    },
    (google.api.field_behavior) = REQUIRED
  ];

  string password = 2 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description : "密码"
    },
    (google.api.field_behavior) = REQUIRED
  ];
  repeated string roles = 3 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description : "角色列表"
    },
    (google.api.field_behavior) = OPTIONAL
  ];
  string nick_name =4[
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description : "昵称"
    },
    (google.api.field_behavior) = OPTIONAL
  ];
}

message CreateUserResponse {
  string tenant_id = 1;
  string user_id = 2;
  string username = 3;
  // reset password key
  string reset_key =4;
}

message GetUserRequest {
  string tenant_id = 1 [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description : "租户ID"
  } ];
  string user_id = 2 [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description : "用户ID"
  } ];
}

message GetUserResponse {
  string tenant_id = 1;
  string user_id = 2;
  string external_id = 3;
  string username = 4;
  string email = 5;
  string nick_name = 6;
  string avatar = 7;
}

message ListUserRequest {
  string tenant_id = 1 [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description : "租户ID"
  } ];
  int32 page_num = 2 [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description : "页 page"
  } ];
  int32 page_size = 3 [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description : "页大小 page_size"
  } ];
  string order_by = 4 [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description : "排序字段"
  } ];
  bool is_descending = 5 [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description : "是否倒序"
  } ];
  string key_words =6 [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description : "查询关键字"
  } ];
}

message ListUserResponse {
  int32 total = 1;
  int32 page_num = 2;
  int32 page_size = 3;
  repeated UserListData users = 4;
}

message UserListData {
  string tenant_id = 1;
  string user_id = 2;
  string external_id = 3;
  string username = 4;
  string email = 5;
  string nick_name = 6;
  string avatar = 7;
  int64 created_at =8;
  repeated UserRole roles=9;
}
message UserRole {
  string id = 1;
  string name =2;
}

message DeleteUserRequest {
  string tenant_id = 1 [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description : "租户ID"
  } ];
  string user_id = 2 [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description : "用户ID"
  } ];
}

message AddTenantPluginRequest {
  string tenant_id = 1 [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description : "租户ID"
  } ];
  AddTenantPluginBody body = 2;
}
message AddTenantPluginBody { string plugin_id = 1 [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  description : "插件ID"
} ]; }

message AddTenantPluginResponse { bool ok = 1; }

message ListTenantPluginRequest { string tenant_id = 1 [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  description : "租户ID"
} ]; }
message ListTenantPluginResponse { repeated string plugins = 1; }

message DeleteTenantPluginRequest {
  string tenant_id = 1 [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description : "租户ID"
  } ];
  string plugin_id = 2 [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description : "插件ID"
  } ];
}
message DeleteTenantPluginResponse { bool ok = 1; }
message PluginPermissibleRequest {
  string tenant_id = 1 [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description : "租户ID"
  } ];
  string plugin_id = 2 [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description : "插件ID"
  } ];
}
message PluginPermissibleResponse { bool allowed = 1; }

message UpdateUserRequest {
  string tenant_id = 1[ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description : "租户ID"
  } ];
  string user_id = 2[ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description : "用户ID"
  } ];
  UpdateUserBody body =3;
}

message UpdateUserBody {
  string nick_name =1[ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description : "用户昵称"
  } ];
  repeated string roles = 2[ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description : "角色ID列表"
  } ];
}

message UpdateUserResponse {
  bool ok =1;
}

message GetResetPasswordKeyRequest {
  string tenant_id =1[ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description : "租户ID"
  } ];
  string user_id =2[ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description : "用户ID"
  } ];
}

message GetResetPasswordKeyResponse {
  string tenant_id =1;
  string user_id =2;
  string username = 3;
  string nick_name =4;
  string reset_key = 5;
}

message RPKInfoRequest {
  RPKInfoBody body =1;
}

message RPKInfoBody {
  string reset_key =1[ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description : "重置密码密钥"
  } ];
}

message RPKInfoResponse {
  string user_id =1;
  string username =2;
  string nick_name =3;
  string tenant_id =4;
}